# Generated by Django 5.2.4 on 2025-08-28 17:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('university_id', models.CharField(default='MY-UNIV-001', help_text='الرقم الجامعي الفريد للمستخدم', max_length=20, unique=True, verbose_name='الرقم الجامعي')),
                ('user_type', models.CharField(choices=[('student', 'طالب'), ('staff', 'موظف'), ('admin', 'مدير')], default='student', help_text='نوع المستخدم في النظام', max_length=10, verbose_name='نوع المستخدم')),
                ('phone_number', models.CharField(blank=True, help_text='رقم الهاتف المحمول', max_length=15, verbose_name='رقم الهاتف')),
                ('date_of_birth', models.DateField(blank=True, help_text='تاريخ ميلاد المستخدم', null=True, verbose_name='تاريخ الميلاد')),
                ('profile_picture', models.ImageField(blank=True, help_text='صورة شخصية للمستخدم', null=True, upload_to='profile_pics/', verbose_name='صورة الملف الشخصي')),
                ('qr_code', models.ImageField(blank=True, help_text='رمز QR للهوية الرقمية', null=True, upload_to='qr_codes/', verbose_name='رمز الاستجابة السريعة')),
                ('major', models.CharField(blank=True, help_text='تخصص الطالب الأكاديمي', max_length=100, verbose_name='التخصص')),
                ('academic_level', models.CharField(blank=True, help_text='المستوى الدراسي الحالي', max_length=50, verbose_name='المستوى الأكاديمي')),
                ('enrollment_year', models.IntegerField(blank=True, help_text='السنة التي تم فيها تسجيل الطالب', null=True, verbose_name='سنة التسجيل')),
                ('department', models.CharField(blank=True, help_text='القسم الذي يعمل به الموظف', max_length=100, verbose_name='القسم')),
                ('position', models.CharField(blank=True, help_text='منصب الموظف في الجامعة', max_length=100, verbose_name='المنصب')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': 'المستخدمون',
                'ordering': ['university_id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(help_text='رقم الموظف الفريد', max_length=20, unique=True, verbose_name='رقم الموظف')),
                ('hire_date', models.DateField(help_text='تاريخ بداية العمل في الجامعة', verbose_name='تاريخ التوظيف')),
                ('salary', models.DecimalField(blank=True, decimal_places=2, help_text='الراتب الشهري للموظف', max_digits=10, null=True, verbose_name='الراتب')),
                ('permissions', models.JSONField(blank=True, default=dict, help_text='صلاحيات الموظف في النظام', verbose_name='الصلاحيات')),
                ('user', models.OneToOneField(help_text='المستخدم المرتبط بهذا الملف الشخصي', on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'الملف الشخصي للموظف',
                'verbose_name_plural': 'الملفات الشخصية للموظفين',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id_number', models.CharField(help_text='رقم الطالب الفريد', max_length=20, unique=True, verbose_name='رقم الطالب')),
                ('gpa', models.DecimalField(blank=True, decimal_places=3, help_text='المعدل التراكمي للطالب', max_digits=100, null=True, verbose_name='المعدل التراكمي')),
                ('total_credits', models.IntegerField(default=0, help_text='العدد الإجمالي للساعات المعتمدة المكتسبة', verbose_name='إجمالي الساعات المعتمدة')),
                ('graduation_date', models.DateField(blank=True, help_text='تاريخ التخرج المتوقع أو الفعلي', null=True, verbose_name='تاريخ التخرج')),
                ('emergency_contact_name', models.CharField(blank=True, help_text='اسم الشخص المراد الاتصال به في حالات الطوارئ', max_length=100, verbose_name='اسم جهة الاتصال في حالات الطوارئ')),
                ('emergency_contact_phone', models.CharField(blank=True, help_text='رقم هاتف جهة الاتصال في حالات الطوارئ', max_length=15, verbose_name='هاتف جهة الاتصال في حالات الطوارئ')),
                ('user', models.OneToOneField(help_text='المستخدم المرتبط بهذا الملف الشخصي', on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'الملف الشخصي للطالب',
                'verbose_name_plural': 'الملفات الشخصية للطلاب',
                'ordering': ['student_id_number'],
            },
        ),
    ]
